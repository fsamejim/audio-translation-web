services:
  # MySQL Database
  database:
    image: mysql:8.0
    container_name: audio-translation-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: frontbackwebdb
      MYSQL_USER: sammy
      MYSQL_PASSWORD: password123
      MYSQL_ROOT_PASSWORD: rootpassword123
    ports:
      - "3307:3306"  # Use 3307 to avoid conflict with local MySQL
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/src/main/resources/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - audio-translation-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Spring Boot Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: audio-translation-backend
    restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://database:3306/frontbackwebdb?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: sammy
      SPRING_DATASOURCE_PASSWORD: password123
      JWT_SECRET: THIS_IS_A_SECURE_SECRET_KEY_FOR_JWT_AUTHENTICATION_12345678901234567890
    ports:
      - "8080:8080"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - audio-translation-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: audio-translation-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - audio-translation-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  mysql_data:
    driver: local

networks:
  audio-translation-network:
    driver: bridge